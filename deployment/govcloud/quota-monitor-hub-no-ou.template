{
  "Description": "(SO0005-NoOU) - quota-monitor-for-aws version:v6.0.0 - Hub Template, use it when you are not using AWS Organizations",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "SNSEmail": {
      "Type": "String",
      "Default": "",
      "Description": "To disable email notifications, leave this blank."
    },
    "SlackNotification": {
      "Type": "String",
      "Default": "No",
      "AllowedValues": [
        "Yes",
        "No"
      ]
    }
  },
  "Mappings": {
    "QuotaMonitorMap": {
      "Metrics": {
        "SendAnonymousData": "yes",
        "MetricsEndpoint": "https://metrics.awssolutionsbuilder.com/generic"
      },
      "SSMParameters": {
        "SlackHook": "/QuotaMonitor/SlackHook",
        "Accounts": "/QuotaMonitor/Accounts"
      }
    }
  },
  "Conditions": {
    "SNSTrueCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "SNSEmail"
            },
            ""
          ]
        }
      ]
    },
    "SlackTrueCondition": {
      "Fn::Equals": [
        {
          "Ref": "SlackNotification"
        },
        "Yes"
      ]
    },
    "CDKMetadataAvailable": {
          "Fn::Or": [
            {
              "Fn::Or": [
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "af-south-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "ap-east-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "ap-northeast-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "ap-northeast-2"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "ap-south-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "ap-southeast-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "ap-southeast-2"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "ca-central-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "cn-north-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "cn-northwest-1"
                  ]
                }
              ]
            },
            {
              "Fn::Or": [
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "eu-central-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "eu-north-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "eu-south-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "eu-west-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "eu-west-2"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "eu-west-3"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "me-south-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "sa-east-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "us-east-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "us-east-2"
                  ]
                }
              ]
            },
            {
              "Fn::Or": [
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "us-west-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "us-west-2"
                  ]
                }
              ]
            },
            {
              "Fn::Or": [
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "us-gov-west-1"
                  ]
                },
                {
                  "Fn::Equals": [
                    {
                      "Ref": "AWS::Region"
                    },
                    "us-gov-east-1"
                  ]
                }
              ]
            }
          ]
    }
  },
  "Resources": {
    "QMBusFF5C6C0C": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "QuotaMonitorBus"
      }
    },
    "KMSHubQMEncryptionKeyA80F8C05": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "CMK for AWS resources provisioned by Quota Monitor in this account",
        "Enabled": true,
        "EnableKeyRotation": true
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "KMSHubQMEncryptionKeyAlias6C248240": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/CMK-KMS-Hub",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      }
    },
    "QMSlackHook4F1AD495": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": "NOP",
        "Description": "Slack Hook URL to send Quota Monitor events",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "SlackHook"
          ]
        }
      },
      "Condition": "SlackTrueCondition"
    },
    "QMAccounts3D743F6B": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "StringList",
        "Value": "NOP",
        "Description": "List of target Accounts",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "Accounts"
          ]
        }
      }
    },
    "QMUtilsLayerQMUtilsLayerLayer80D5D993": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.0.0/assetc53e0b0960d6e36a833fed437ed76aeeeed1316f8af0ce9c1fced08eeb465b4d.zip"
        },
        "CompatibleRuntimes": [
          "nodejs16.x"
        ],
        "LayerName": "QM-UtilsLayer"
      }
    },
    "QMSlackNotifierQMSlackNotifierEventsRuleC3528E53": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-SlackNotifier-EventsRule",
        "EventBusName": {
          "Ref": "QMBusFF5C6C0C"
        },
        "EventPattern": {
          "detail": {
            "status": [
              "WARN",
              "ERROR"
            ],
            "check-item-detail": {
              "Service": [
                "AutoScaling",
                "CloudFormation",
                "DynamoDB",
                "EBS",
                "EC2",
                "ELB",
                "IAM",
                "Kinesis",
                "RDS",
                "Route53",
                "SES",
                "VPC",
                "monitoring",
                "dynamodb",
                "ec2",
                "ecr",
                "firehose"
              ]
            }
          },
          "detail-type": [
            "Trusted Advisor Check Item Refresh Notification",
            "Service Quotas Utilization Notification"
          ],
          "source": [
            "aws.trustedadvisor",
            "aws-solutions.quota-monitor"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMSlackNotifierQMSlackNotifierLambda95713661",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Condition": "SlackTrueCondition"
    },
    "QMSlackNotifierQMSlackNotifierEventsRuleAllowEventRulequotamonitorhubnoouQMSlackNotifierQMSlackNotifierLambda52C322580E2041A7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMSlackNotifierQMSlackNotifierLambda95713661",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMSlackNotifierQMSlackNotifierEventsRuleC3528E53",
            "Arn"
          ]
        }
      },
      "Condition": "SlackTrueCondition"
    },
    "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueue74B865F7": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Condition": "SlackTrueCondition"
    },
    "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueuePolicy719E4C6A": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueue74B865F7",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueue74B865F7"
          }
        ]
      },
      "Condition": "SlackTrueCondition"
    },
    "QMSlackNotifierQMSlackNotifierLambdaServiceRole6342FD1D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Condition": "SlackTrueCondition"
    },
    "QMSlackNotifierQMSlackNotifierLambdaServiceRoleDefaultPolicy4C4D219B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueue74B865F7",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter",
                    {
                      "Ref": "QMSlackHook4F1AD495"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMSlackNotifierQMSlackNotifierLambdaServiceRoleDefaultPolicy4C4D219B",
        "Roles": [
          {
            "Ref": "QMSlackNotifierQMSlackNotifierLambdaServiceRole6342FD1D"
          }
        ]
      },
      "Condition": "SlackTrueCondition"
    },
    "QMSlackNotifierQMSlackNotifierLambda95713661": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.0.0/assetad2d286dc08d0675ee7b83127c45a3f12708988df08964457781dd74d04fb251.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "QMSlackNotifierQMSlackNotifierLambdaServiceRole6342FD1D",
            "Arn"
          ]
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMSlackNotifierQMSlackNotifierLambdaDeadLetterQueue74B865F7",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-SlackNotifier-Lambda",
        "Environment": {
          "Variables": {
            "SLACK_HOOK": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "SSMParameters",
                "SlackHook"
              ]
            },
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.0.0",
            "VERSION": "v6.0.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 128,
        "Runtime": "nodejs16.x",
        "Timeout": 60
      },
      "DependsOn": [
        "QMSlackNotifierQMSlackNotifierLambdaServiceRoleDefaultPolicy4C4D219B",
        "QMSlackNotifierQMSlackNotifierLambdaServiceRole6342FD1D"
      ],
      "Condition": "SlackTrueCondition"
    },
    "QMSNSNotifierQMSNSNotifierEventsRule407B9389": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-SNSNotifier-EventsRule",
        "EventBusName": {
          "Ref": "QMBusFF5C6C0C"
        },
        "EventPattern": {
          "detail": {
            "status": [
              "WARN",
              "ERROR"
            ],
            "check-item-detail": {
              "Service": [
                "AutoScaling",
                "CloudFormation",
                "DynamoDB",
                "EBS",
                "EC2",
                "ELB",
                "IAM",
                "Kinesis",
                "RDS",
                "Route53",
                "SES",
                "VPC",
                "monitoring",
                "dynamodb",
                "ec2",
                "ecr",
                "firehose"
              ]
            }
          },
          "detail-type": [
            "Trusted Advisor Check Item Refresh Notification",
            "Service Quotas Utilization Notification"
          ],
          "source": [
            "aws.trustedadvisor",
            "aws-solutions.quota-monitor"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "QMSNSNotifierQMSNSNotifierSNSTopicB43762C7"
            },
            "Id": "Target0"
          }
        ]
      },
      "Condition": "SNSTrueCondition"
    },
    "QMSNSNotifierQMSNSNotifierSNSTopicB43762C7": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "Condition": "SNSTrueCondition"
    },
    "QMSNSNotifierQMSNSNotifierSNSTopicPolicy12067180": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Ref": "QMSNSNotifierQMSNSNotifierSNSTopicB43762C7"
              },
              "Sid": "0"
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": {
                "Ref": "QMSNSNotifierQMSNSNotifierSNSTopicB43762C7"
              },
              "Sid": "1"
            }
          ],
          "Version": "2012-10-17"
        },
        "Topics": [
          {
            "Ref": "QMSNSNotifierQMSNSNotifierSNSTopicB43762C7"
          }
        ]
      },
      "Condition": "SNSTrueCondition"
    },
    "QMEmailSubscription32E71F90": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "email",
        "TopicArn": {
          "Ref": "QMSNSNotifierQMSNSNotifierSNSTopicB43762C7"
        },
        "Endpoint": {
          "Ref": "SNSEmail"
        }
      },
      "Condition": "SNSTrueCondition"
    },
    "QMSummarizerEventQueueQMSummarizerEventQueueEventsRuleE50B8D7C": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-Summarizer-EventQueue-EventsRule",
        "EventBusName": {
          "Ref": "QMBusFF5C6C0C"
        },
        "EventPattern": {
          "detail": {
            "status": [
              "OK",
              "WARN",
              "ERROR"
            ],
            "check-item-detail": {
              "Service": [
                "AutoScaling",
                "CloudFormation",
                "DynamoDB",
                "EBS",
                "EC2",
                "ELB",
                "IAM",
                "Kinesis",
                "RDS",
                "Route53",
                "SES",
                "VPC",
                "monitoring",
                "dynamodb",
                "ec2",
                "ecr",
                "firehose"
              ]
            }
          },
          "detail-type": [
            "Trusted Advisor Check Item Refresh Notification",
            "Service Quotas Utilization Notification"
          ],
          "source": [
            "aws.trustedadvisor",
            "aws-solutions.quota-monitor"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "VisibilityTimeout": 60
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMSummarizerEventQueueQMSummarizerEventQueueQueuePolicyE7E1F6D8": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A"
          }
        ]
      }
    },
    "QMTable336670B0": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "MessageId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "TimeStamp",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "MessageId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "TimeStamp",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "KMSHubQMEncryptionKeyA80F8C05",
              "Arn"
            ]
          },
          "SSEEnabled": true,
          "SSEType": "KMS"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "QMReporterQMReporterEventsRule0BF77282": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-Reporter-EventsRule",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMReporterQMReporterLambda7D98A6E4",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "QMReporterQMReporterEventsRuleAllowEventRulequotamonitorhubnoouQMReporterQMReporterLambda0CE086E3DDFD1F2A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMReporterQMReporterLambda7D98A6E4",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMReporterQMReporterEventsRule0BF77282",
            "Arn"
          ]
        }
      }
    },
    "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMReporterQMReporterLambdaDeadLetterQueuePolicyE714847D": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC"
          }
        ]
      }
    },
    "QMReporterQMReporterLambdaServiceRoleBA4CED84": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMTable336670B0",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76",
        "Roles": [
          {
            "Ref": "QMReporterQMReporterLambdaServiceRoleBA4CED84"
          }
        ]
      }
    },
    "QMReporterQMReporterLambda7D98A6E4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.0.0/assete70f4a7ae403e9be904d96c66a8afb9926d009c126c8c2b925e88698c9a60359.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "QMReporterQMReporterLambdaServiceRoleBA4CED84",
            "Arn"
          ]
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-Reporter-Lambda",
        "Environment": {
          "Variables": {
            "QUOTA_TABLE": {
              "Ref": "QMTable336670B0"
            },
            "SQS_URL": {
              "Ref": "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A"
            },
            "MAX_MESSAGES": "10",
            "MAX_LOOPS": "10",
            "ANONYMOUS_DATA": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "SendAnonymousData"
              ]
            },
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.0.0",
            "VERSION": "v6.0.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 512,
        "Runtime": "nodejs16.x",
        "Timeout": 10
      },
      "DependsOn": [
        "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76",
        "QMReporterQMReporterLambdaServiceRoleBA4CED84"
      ]
    },
    "QMDeploymentManagerQMDeploymentManagerEventsRule53DB2DA9": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-Deployment-Manager-EventsRule",
        "EventPattern": {
          "detail-type": [
            "Parameter Store Change"
          ],
          "source": [
            "aws.ssm"
          ],
          "resources": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":ssm:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":parameter",
                  {
                    "Ref": "QMAccounts3D743F6B"
                  }
                ]
              ]
            }
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "QMDeploymentManagerQMDeploymentManagerEventsRuleAllowEventRulequotamonitorhubnoouQMDeploymentManagerQMDeploymentManagerLambda69BB20E9F676A8A9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMDeploymentManagerQMDeploymentManagerEventsRule53DB2DA9",
            "Arn"
          ]
        }
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueuePolicy6B59E185": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2"
          }
        ]
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "events:PutPermission",
                "events:RemovePermission"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "events:DescribeEventBus",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMBusFF5C6C0C",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter",
                    {
                      "Ref": "QMAccounts3D743F6B"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777",
        "Roles": [
          {
            "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72"
          }
        ]
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.0.0/asset37ff605015d154a3e449959c5224a0fece3f31ddc2682d2720ba632ddda7e12a.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72",
            "Arn"
          ]
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-Deployment-Manager-Lambda",
        "Environment": {
          "Variables": {
            "EVENT_BUS_NAME": {
              "Ref": "QMBusFF5C6C0C"
            },
            "EVENT_BUS_ARN": {
              "Fn::GetAtt": [
                "QMBusFF5C6C0C",
                "Arn"
              ]
            },
            "QM_ACCOUNT_PARAMETER": {
              "Ref": "QMAccounts3D743F6B"
            },
            "DEPLOYMENT_MODEL": "Accounts",
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.0.0",
            "VERSION": "v6.0.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 512,
        "Runtime": "nodejs16.x",
        "Timeout": 60
      },
      "DependsOn": [
        "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777",
        "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72"
      ]
    },
    "QMHelperQMHelperFunctionServiceRole0506622D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
    "QMHelperQMHelperFunction91954E97": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.0.0/asseteaa5615916a5d00cd7d595a88c6329920648177d9a1cfd8d90aced55edb2de8f.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "QMHelperQMHelperFunctionServiceRole0506622D",
            "Arn"
          ]
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-Helper-Function",
        "Environment": {
          "Variables": {
            "METRICS_ENDPOINT": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "MetricsEndpoint"
              ]
            },
            "SEND_METRIC": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "SendAnonymousData"
              ]
            },
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.0.0",
            "VERSION": "v6.0.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 128,
        "Runtime": "nodejs16.x",
        "Timeout": 5
      },
      "DependsOn": [
        "QMHelperQMHelperFunctionServiceRole0506622D"
      ]
    },
    "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "QMHelperQMHelperProviderframeworkonEventServiceRoleDefaultPolicy86C1FCC1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "QMHelperQMHelperFunction91954E97",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "QMHelperQMHelperFunction91954E97",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMHelperQMHelperProviderframeworkonEventServiceRoleDefaultPolicy86C1FCC1",
        "Roles": [
          {
            "Ref": "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB"
          }
        ]
      }
    },
    "QMHelperQMHelperProviderframeworkonEventB1DF6D3F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "solutions-${AWS::Region}"
          },
          "S3Key": "quota-monitor-for-aws/v6.0.0/assete7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB",
            "Arn"
          ]
        },
        "Description": "AWS CDK resource provider framework - onEvent (quota-monitor-hub-no-ou/QM-Helper/QM-Helper-Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "QMHelperQMHelperFunction91954E97",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Runtime": "nodejs14.x",
        "Timeout": 900
      },
      "DependsOn": [
        "QMHelperQMHelperProviderframeworkonEventServiceRoleDefaultPolicy86C1FCC1",
        "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB"
      ]
    },
    "QMHelperCreateUUIDE0D423E6": {
      "Type": "Custom::CreateUUID",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "QMHelperQMHelperProviderframeworkonEventB1DF6D3F",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMHelperLaunchData6F23B2C3": {
      "Type": "Custom::LaunchData",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "QMHelperQMHelperProviderframeworkonEventB1DF6D3F",
            "Arn"
          ]
        },
        "SOLUTION_UUID": {
          "Fn::GetAtt": [
            "QMHelperCreateUUIDE0D423E6",
            "UUID"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/11SS1PDIBD+Ld4pWl/jte3oxTrGtOO1Q8naoQkQWaiTyfDfZUmbVi98Dz6yu5Bbfv/Ab67ED05kVU8ateX9ygtZs8WXKYQTGjw4Em+ibZXZEV1YUymvrGHp3KaHAxiPvH8mnAekyMjL0AAZhJHVOuVeoSOHYNYokfOZRIaoqb5Lhf4UP4thc6nQj15kjdDbSvB+KTpwn+CQekvH/usCnFaY1Usw0h/tE0/17zYCEdI0M4Kk+TzIGvxcIDD8Tt1/BAh5ooHktbCNkt1oDjIyJdI0pT1eAOE5eMqgSd9c21ZJcgeS13P0Uq7CFqVT7an1Sx1Z1RmhbZXecC22Q9lMYmR5nvSyO3rDEtAGJ4HJgN7qjTtq5IWzB1XRpeedMUgDXPD34NvgIzO2Ar7H68P0kU+f0o+0R6UmLhivNPBywF/Gnlm1ZAIAAA=="
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "SlackHookKey": {
      "Description": "SSM parameter for Slack Web Hook, change the value for your slack workspace",
      "Value": {
        "Fn::FindInMap": [
          "QuotaMonitorMap",
          "SSMParameters",
          "SlackHook"
        ]
      },
      "Condition": "SlackTrueCondition"
    },
    "UUID": {
      "Description": "UUID for the deployment",
      "Value": {
        "Fn::GetAtt": [
          "QMHelperCreateUUIDE0D423E6",
          "UUID"
        ]
      }
    },
    "EventBus": {
      "Description": "Event Bus Arn in hub",
      "Value": {
        "Fn::GetAtt": [
          "QMBusFF5C6C0C",
          "Arn"
        ]
      }
    }
  }
}